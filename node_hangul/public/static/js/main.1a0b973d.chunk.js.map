{"version":3,"sources":["config/Constants.js","components/AutoComplete.js","components/Header.js","components/Title.js","components/Master.js","components/Scheduler.js","components/Log.js","components/Worker.js","components/Cache.js","components/PrettoSlide.js","lib/axiosRequest.js","App.js","serviceWorker.js","index.js"],"names":["constants","SOCKET_NAMESPACE","urls","autocompleteService","useStyles","makeStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","GoogleMaps","React","useState","value","setValue","inputValue","setInputValue","options","setOptions","fetch","useRef","useMemo","debounce","request","callback","searchAddress","useEffect","active","console","log","axios","get","Constants","search","encodeURIComponent","input","then","results","data","result","count","newOptions","Autocomplete","id","size","style","width","height","getOptionLabel","option","description","filterOptions","x","autoComplete","includeInputInList","filterSelectedOptions","onChange","event","newValue","onInputChange","newInputValue","renderInput","params","TextField","label","variant","fullWidth","memo","gap","insert","update","deleteCount","totalSearched","Box","display","alignItems","justifyContent","mx","mt","fontSize","bgcolor","brown","flexDirection","minWidth","ml","my","mr","textAlign","visibility","Title","title","m","master","lastIndexedCount","lastIndexedPercent","searching","overflow","pid","mem","toLocaleString","lastIndexedDate","mb","currentLog","ConditionalTooltip","props","keyword","children","length","Tooltip","ColorBox","cacheHit","type","logColor","fontWeight","defaultStyle","flexGrow","flexShrink","margin","flexBasis","textOverflow","map","eventTime","userId","ip","replace","elapsed","resultCount","whiteSpace","workers","smallFontSize","mediumFontSize","bigFontSize","flexWrap","worker","p","words","caches","cache","cacheCount","PrettoSlider","withStyles","root","padding","thumb","valueLabel","left","track","borderRadius","rail","Slider","CustomizedSlider","valueLabelDisplay","axiosRequest","url","CONSTANTS","Promise","resolve","success","msg","response","status","error","BrownButton","backgroundColor","Button","App","onClickLoad","a","setState","state","startingIndex","onIndexing","onClickLoadFromDB","onClickClear","indexDone","cacheWorkers","progress","insertCount","updateCount","endpoint","socket","socketIOClient","on","this","updateMasterMonitor","bind","updateWorkerMonitor","updateCacheWorkerMonitor","updateLogMonitor","updateScheduledIndexMonitor","updateProgress","resetState","masterMonitor","indexingStatus","workerMonitor","cacheWorkerMonitor","logMonitor","scheduledIndexMonitor","disalbeClearIndexBtn","disalbeClearCacheBtn","scheduler","disableLoadDBBtn","disableLoadFileBtn","className","delete","PrettoSlide","handleSliderChange","aria-labelledby","open","placement","disabled","onClick","onClickCacheClear","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a0b973d.chunk.js","sourcesContent":["const constants = {   \r\n    SOCKET_NAMESPACE : '/',\r\n    urls : {\r\n        'load': '/loadJuso/useWorkers',\r\n        'loadFromDB': '/loadSong/useWorkers?from=db',      \r\n        'search': '/searchJuso/withWorkers',  \r\n        'clear': '/clearSong',\r\n        'clearCache': '/clearCache'\r\n    }\r\n}\r\n\r\nexport default constants; ","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport throttle from 'lodash/throttle';\r\nimport debounce from 'lodash/debounce';\r\nimport Constants from '../config/Constants';\r\nimport axios from 'axios';\r\n\r\n// function loadScript(src, position, id) {\r\n//   if (!position) {\r\n//     return;\r\n//   }\r\n\r\n//   const script = document.createElement('script');\r\n//   script.setAttribute('async', '');\r\n//   script.setAttribute('id', id);\r\n//   script.src = src;\r\n//   position.appendChild(script);\r\n// }\r\n\r\nconst autocompleteService = {};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.text.secondary,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function GoogleMaps() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(null);\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [options, setOptions] = React.useState([]);\r\n  const loaded = React.useRef(false);\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      debounce((request, callback) => {\r\n        autocompleteService.searchAddress(request, callback);\r\n      }, 200),\r\n    [],\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    autocompleteService.searchAddress = (request, callback) => {\r\n        console.log(request)\r\n        axios.get(`${Constants.urls.search}/${encodeURIComponent(request.input)}?maxReturnCount=10`)\r\n        .then(results => {\r\n            const {count, result} = results.data;\r\n            callback(result);\r\n        })\r\n    }\r\n\r\n    if (inputValue === '') {\r\n      setOptions(value ? [value] : []);\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: inputValue }, (results) => {\r\n      if (active) {\r\n        let newOptions = [];\r\n        if (value) {\r\n          newOptions = [value];\r\n        }\r\n        if (results) {\r\n          newOptions = [...newOptions, ...results];\r\n        }\r\n        setOptions(newOptions);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [value, inputValue, fetch]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"material ui autocomplete\"\r\n      size=\"small\"\r\n      style={{ width:300, height:'4vh' }}\r\n      getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\r\n      filterOptions={(x) => x}\r\n      options={options}\r\n      autoComplete\r\n      includeInputInList\r\n      filterSelectedOptions\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setOptions(newValue ? [newValue, ...options] : options);\r\n        setValue(newValue);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setInputValue(newInputValue);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField {...params} label=\"주소\" variant=\"outlined\" fullWidth />\r\n      )}\r\n    //   renderOption={(option) => {\r\n    //     // const matches = option.structured_formatting.main_text_matched_substrings;\r\n    //     // const parts = parse(\r\n    //     //   option.structured_formatting.main_text,\r\n    //     //   matches.map((match) => [match.offset, match.offset + match.length]),\r\n    //     // );\r\n    //     const parts = parse(\r\n    //         option,\r\n    //         match(option,value)\r\n    //     )\r\n\r\n    //     return (\r\n    //       <Grid container alignItems=\"center\">\r\n    //         <Grid item>\r\n    //           <LocationOnIcon className={classes.icon} />\r\n    //         </Grid>\r\n    //         <Grid item xs>\r\n    //           {parts.map((part, index) => (\r\n    //             <span key={index} style={{ fontSize:\"12px\", fontWeight: part.highlight ? 700 : 400 }}>\r\n    //               {part.text}\r\n    //             </span>\r\n    //           ))}\r\n\r\n    //           {/* <Typography variant=\"body2\" color=\"textSecondary\">\r\n    //             {option.structured_formatting.secondary_text}\r\n    //           </Typography> */}\r\n    //         </Grid>\r\n    //       </Grid>\r\n    //     );\r\n    //   }}\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport AutoComplete from './AutoComplete';\r\nimport Chip from '@material-ui/core/Chip';\r\n// import ResizePanel from 'react-resize-panel';\r\n\r\nfunction Header({gap, text, insert=0, update=0, deleteCount=0, totalSearched=0}) {\r\n    return (\r\n      <Box display=\"flex\">\r\n        <Box display=\"flex\" width=\"1\" alignItems=\"center\" justifyContent=\"center\" mx={gap} mt={gap} height=\"10vh\" fontSize=\"h3.fontSize\" bgcolor={brown[900]}>\r\n          <Box bgcolor={brown[700]} display=\"flex\" width=\"10%\" justifyContent=\"center\" flexDirection=\"column\" minWidth=\"100px\" ml=\"10px\">\r\n            <Box mt=\"4px\" ml=\"10px\" color=\"white\" fontSize=\"caption.fontSize\">Total Searched</Box>\r\n            <Box my=\"4px\" mr=\"15px\" color=\"white\" fontSize=\"body1.fontSize\" textAlign=\"right\">{totalSearched}</Box>\r\n          </Box>\r\n          <Box bgcolor={brown[700]} fontSize=\"caption.fontSize\" display=\"flex\" flexDirection=\"column\" ml=\"10px\">\r\n            <AutoComplete></AutoComplete>\r\n          </Box>\r\n          <Box width=\"1\" textAlign=\"center\" mx=\"auto\" >\r\n            {text}\r\n          </Box>\r\n          <Box bgcolor={brown[700]} visibility=\"hidden\" fontSize=\"caption.fontSize\" display=\"flex\" flexDirection=\"column\" mr=\"10px\">\r\n            <AutoComplete></AutoComplete>\r\n          </Box>\r\n          <Box bgcolor={brown[700]} display=\"flex\" width=\"10%\" justifyContent=\"center\" flexDirection=\"column\" ml=\"auto\" minWidth=\"100px\" mr=\"10px\">\r\n            <Box mt=\"4px\" ml=\"10px\" color=\"white\" fontSize=\"caption.fontSize\">Insert : {insert}</Box>\r\n            <Box mt=\"4px\" ml=\"10px\" color=\"white\" fontSize=\"caption.fontSize\">Update : {update}</Box>\r\n            <Box my=\"4px\" ml=\"10px\" color=\"white\" fontSize=\"caption.fontSize\">Delete : {deleteCount}</Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    )\r\n}\r\n\r\nexport default React.memo(Header);\r\n ","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Title({gap, title}) {\r\n    return (\r\n        <Box textAlign={'center'} bgcolor={brown[700]} m={gap}>{title}</Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Master({gap, master}) {\r\n  const lastIndexedCount = master.lastIndexedCount ? master.lastIndexedCount : 0;\r\n  const lastIndexedPercent = master.lastIndexedPercent ? master.lastIndexedPercent : '0%';\r\n  const {searching = 0} = master;\r\n  return (\r\n      <Box display=\"flex\" height=\"20vh\" flexDirection=\"column\">      \r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"space-around\" \r\n          alignItems=\"center\" \r\n          // height=\"1\"\r\n          height='20vh' \r\n          mx={gap} \r\n          // mb={gap} \r\n          fontSize=\"fontSize\" \r\n          bgcolor={brown[700]}\r\n          overflow=\"hidden\"\r\n        >\r\n          <Box display=\"flex\" justifyContent=\"flex-start\" flexDirection=\"column\" m={2} textAlign=\"left\">\r\n            <div>PID: {master.pid}</div> \r\n            <div>MEM: {master.mem}</div>\r\n            <p></p>\r\n            <div>TOTAL INDEXED : {lastIndexedCount.toLocaleString()}</div>\r\n            <div>TOTAL PERCENT : {lastIndexedPercent.toLocaleString()}</div>\r\n            <div>LAST INDEXED DATE : {master.lastIndexedDate}</div>\r\n\r\n          </Box>\r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Searching</div>\r\n             <div style={{fontSize:\"60px\"}}>{searching}</div> \r\n          </Box> \r\n        </Box>\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Master);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Master({gap, master}) {\r\n  // const lastIndexedCount = master.lastIndexedCount ? master.lastIndexedCount : 0;\r\n  // const lastIndexedPercent = master.lastIndexedPercent ? master.lastIndexedPercent : '0%';\r\n  // const {searching = 0} = master;\r\n  const lastExecuted = '2020/07/09 23:22:01'\r\n  return (\r\n      <Box display=\"flex\" height=\"20vh\" flexDirection=\"column\">\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"space-around\" \r\n          alignItems=\"center\" \r\n          height=\"1\"\r\n          mx={gap}  \r\n          fontSize=\"fontSize\" \r\n          bgcolor={brown[700]}\r\n          overflow=\"hidden\"\r\n        >\r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Insert</div>\r\n             <div style={{fontSize:\"60px\"}}>{\"0\"}</div> \r\n          </Box> \r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Update</div>\r\n             <div style={{fontSize:\"60px\"}}>{\"0\"}</div> \r\n          </Box> \r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Delete</div>\r\n             <div style={{fontSize:\"60px\"}}>{\"0\"}</div> \r\n          </Box> \r\n        </Box>\r\n        <Box \r\n          bgcolor={brown[800]}\r\n          mx={gap}  \r\n          fontSize=\"fontSize\" \r\n          textAlign=\"center\"\r\n          mb={gap} \r\n        >\r\n            last execution : {lastExecuted}\r\n        </Box>\r\n      </Box>\r\n\r\n  )\r\n}\r\n\r\nexport default React.memo(Master);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction Log({gap, currentLog}) {\r\n  console.log('rerendering Log : ', currentLog);\r\n  // const logStyle = {display:'flex', flexGrow:0, flexShrink:0, flexBasis:\"130px\", overflow:'hidden'};\r\n  const ConditionalTooltip = props => {\r\n    const {keyword, children} = props;\r\n    if(keyword.length > 20){\r\n      return <Tooltip title={keyword}>{children}</Tooltip>\r\n    } else {\r\n      return <div>{children}</div>\r\n    }\r\n  }\r\n  const ColorBox = props => {\r\n    const {cacheHit, type, children} = props;\r\n    const logColor = (type === 'selected' && 'darkseagreen') || (cacheHit && 'cyan');\r\n    const fontWeight = type === 'selected' && 500;\r\n    return <div style={{color:logColor, fontWeight}}>{children}</div>\r\n  }\r\n  const defaultStyle = {flexGrow:1, flexShrink:5, margin:'3px', minWidth:'120px', flexBasis:'120px'};\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow={3} mt={gap} mx={gap} overflow=\"auto\" textOverflow=\"ellipsis\" fontSize=\"12px\" bgcolor={brown[700]} style={{\"overflowX\":\"hidden\"}}>\r\n      <Box style={{...defaultStyle, minWidth:'120px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit} type={log.type}>{log.eventTime}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit} type={log.type}>{log.userId}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit} type={log.type}>{log.ip.replace('::ffff:','')}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit} type={log.type}>{log.elapsed}초</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit} type={log.type}>{log.resultCount}건</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexGrow:5, flexShrink:1, whiteSpace:'nowrap', textOverflow:'ellipsis'}}>\r\n        {currentLog.map(log => \r\n          (\r\n          <ConditionalTooltip keyword={log.keyword}>\r\n            {/* <div style={{\"color\": log.cacheHit && \"cyan\"}}>{log.keyword}</div> */}\r\n            <ColorBox cacheHit={log.cacheHit} type={log.type}>{log.keyword}</ColorBox>\r\n          </ConditionalTooltip>\r\n          )\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Log);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Worker({gap, workers}) {\r\n  const smallFontSize = `${12 - (workers.length/3)}px`;\r\n  const mediumFontSize = `${15 - (workers.length/3)}px`;\r\n  const bigFontSize = `${25 - (workers.length/3)}px`;\r\n\r\n  return (\r\n      // <Box flexGrow={1} flexBasis={0} bgcolor={brown[800]}>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\"\r\n          justifyContent=\"center\" \r\n          alignItems=\"center\" \r\n          flexWrap=\"wrap\" \r\n          flexGrow=\"1\" \r\n          mx={gap} \r\n          overflow=\"hidden\"\r\n          // mb={gap} \r\n          bgcolor={brown[700]}\r\n        >\r\n          {workers.map(worker => \r\n            <Box \r\n              display=\"flex\" \r\n              flexDirection=\"row\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\" \r\n              m={1} \r\n              fontSize={mediumFontSize} \r\n              bgcolor={brown[600]}\r\n            >\r\n              <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" textAlign=\"left\" p={2}>\r\n                <div>PID: {worker.pid}</div>\r\n                <div>WORDS: {worker.words.toLocaleString()}</div>\r\n                <p></p>\r\n                <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n                <div style={{fontSize:bigFontSize}}>{worker.mem}</div>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      // </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Worker);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Cache({gap, caches}) {\r\n  const smallFontSize = `${10 - (caches.length/3)}px`; \r\n  const mediumFontSize = `${13 - (caches.length/3)}px`;\r\n  const bigFontSize = `${22 - (caches.length/3)}px`; \r\n\r\n  return (\r\n    <Box \r\n     display=\"flex\" \r\n     flexDirection=\"row\"\r\n     justifyContent=\"center\" \r\n     alignItems=\"center\" \r\n     flexWrap=\"wrap\" \r\n     height=\"20vh\"\r\n     mx={gap} \r\n     bgcolor={brown[700]}\r\n     overflow=\"hidden\"\r\n    >\r\n      {caches.map(cache => \r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"center\" \r\n          alignItems=\"center\"\r\n          m={1} \r\n          fontSize={mediumFontSize} \r\n          bgcolor={brown[600]}\r\n        >\r\n          <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" p={2} textAlign=\"left\">\r\n            <div>PID: {cache.pid}</div>\r\n            <div>COUNT: {cache.cacheCount}</div>\r\n            <div>CACHE HIT: {cache.cacheHit}</div>\r\n            <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n            <div style={{fontSize:bigFontSize}}>{cache.mem}</div>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Cache);","import React from 'react';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#52af77',\r\n      height: '5px',\r\n      padding : 0,\r\n\r\n    },\r\n    // thumb: {\r\n    //   height: 10,\r\n    //   width: 10,\r\n    //   backgroundColor: '#fff',\r\n    //   border: '2px solid currentColor',\r\n    //   marginTop: -8,\r\n    //   marginLeft: -12,\r\n    //   '&:focus,&:hover,&$active': {\r\n    //     boxShadow: 'inherit',\r\n    //   },\r\n    // },\r\n    thumb : {\r\n      display: 'none'\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 5,\r\n      borderRadius: 0,\r\n    },\r\n    rail: {\r\n      height: 5,\r\n      borderRadius: 0,\r\n    },\r\n  })(Slider);\r\n\r\nconst CustomizedSlider = ({value, onChange}) => {\r\n    return (\r\n        <PrettoSlider value={value} onChange={onChange} valueLabelDisplay=\"auto\"></PrettoSlider>\r\n    )\r\n}\r\n\r\nexport default CustomizedSlider;","import axios from 'axios';\r\nimport CONSTANTS from '../config/Constants';\r\n\r\nconst axiosRequest = {\r\n    async get(type){\r\n        try {\r\n            const url = CONSTANTS.urls[type];\r\n            if(!url) return Promise.resolve({success:false, msg:`not valid type : ${type}`});\r\n            const response = await axios.get(url);\r\n            if(response.status === 200){\r\n                console.log(response.data)\r\n                return response.data;\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n        }\r\n    },\r\n}\r\n\r\nexport default axiosRequest;","import React, {Component} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Header from './components/Header';\r\nimport SearchBar from './components/SearchBar';\r\nimport Title from './components/Title';\r\nimport Master from './components/Master';\r\nimport Scheduler from './components/Scheduler';\r\nimport Log from './components/Log';\r\nimport Worker from './components/Worker';\r\nimport Cache from './components/Cache';\r\nimport Constants from './config/Constants';\r\nimport PrettoSlide from './components/PrettoSlide';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport axiosRequest from './lib/axiosRequest';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './App.css';\r\n\r\nconst BrownButton = withStyles({\r\n  root: {\r\n    backgroundColor: brown[800],\r\n    '&:hover': {\r\n      backgroundColor: brown[500],\r\n    },\r\n    '&:active': {\r\n      backgroundColor: brown[300]\r\n    },\r\n  }\r\n})(Button)\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      master : {},\r\n      workers : [],\r\n      cacheWorkers : [],\r\n      currentLog : [],\r\n      progress: 0,\r\n      // disableLoadDBBtn: false,\r\n      // disableLoadFileBtn: false,\r\n      // disalbeClearIndexBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      onIndexing: false,\r\n      indexDone: true,\r\n      insertCount: 0,\r\n      updateCount: 0,\r\n      deleteCount: 0,\r\n    }\r\n  }  \r\n  \r\n  componentDidMount(){\r\n    // connect socket server\r\n    const {endpoint} = Constants.SOCKET_NAMESPACE;\r\n    const socket = socketIOClient(endpoint);\r\n    socket.on('connect', () => {\r\n      console.log('socket connected');\r\n    })   \r\n    socket.on('masterMonitor', this.updateMasterMonitor.bind(this));\r\n    socket.on('workerMonitor', this.updateWorkerMonitor.bind(this));\r\n    socket.on('cacheWorkerMonitor', this.updateCacheWorkerMonitor.bind(this));\r\n    socket.on('logMonitor', this.updateLogMonitor.bind(this));\r\n    socket.on('scheuledIndexMonitor', this.updateScheduledIndexMonitor.bind(this));\r\n    socket.on('progress', this.updateProgress.bind(this))\r\n    socket.on('error', this.resetState.bind(this));\r\n    socket.on('disconnect', this.resetState.bind(this));\r\n    socket.on('connect_error', this.resetState.bind(this));\r\n  }\r\n\r\n  updateMasterMonitor(masterMonitor){\r\n    console.log('update master:',masterMonitor)\r\n    const {indexingStatus} = masterMonitor;\r\n    const startingIndex = (indexingStatus === 'INDEX_STARTED');\r\n    const onIndexing = (indexingStatus === 'INDEXING');\r\n    const indexDone = (indexingStatus === 'INDEX_DONE');\r\n    this.setState({\r\n      ...this.state,\r\n      master: masterMonitor,\r\n      startingIndex,\r\n      onIndexing,\r\n      indexDone\r\n    })\r\n  }\r\n\r\n  updateWorkerMonitor(workerMonitor){\r\n    // console.log('update workers:',workerMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      workers: workerMonitor\r\n    })\r\n  }\r\n\r\n  updateCacheWorkerMonitor(cacheWorkerMonitor){\r\n    this.setState({\r\n      ...this.state,\r\n      cacheWorkers: cacheWorkerMonitor\r\n    })\r\n  }\r\n\r\n  updateLogMonitor(logMonitor){\r\n    console.log('update log:',logMonitor);\r\n    this.setState({\r\n      ...this.state,\r\n      currentLog: logMonitor\r\n    })\r\n  }\r\n\r\n  updateScheduledIndexMonitor(scheduledIndexMonitor){\r\n    const {insertCount, updateCount, deleteCount} = scheduledIndexMonitor;\r\n    this.setState({\r\n      ...this.state,\r\n      insertCount,\r\n      updateCount,\r\n      deleteCount      \r\n    })\r\n  }\r\n\r\n  updateProgress(progress){\r\n    const indexDone = (progress > 99.9);\r\n    console.log('update progress: ',progress, indexDone);\r\n    this.setState({\r\n      ...this.state,\r\n      progress,\r\n      disalbeClearIndexBtn: !indexDone,\r\n      disalbeClearCacheBtn: !indexDone,\r\n      onIndexing: !indexDone\r\n    })\r\n  }\r\n\r\n  resetState(){\r\n    this.setState({\r\n      master : {},\r\n      workers : [],\r\n      currentLog : [],\r\n      cacheWorkers : []\r\n    })\r\n  }\r\n\r\n  onClickLoad =  async () => {\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: true,\r\n      // disableLoadFileBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      // disalbeClearIndexBtn: true,\r\n      startingIndex: true,\r\n      onIndexing: true,\r\n    })\r\n    const result = await axiosRequest.get('load');\r\n    console.log(result);\r\n  }\r\n\r\n  onClickLoadFromDB = async () => {\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: true,\r\n      // disableLoadFileBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      // disalbeClearIndexBtn: true,\r\n      startingIndex: true,\r\n      onIndexing: true\r\n    })\r\n    const result = await axiosRequest.get('loadFromDB');\r\n    console.log(result);  \r\n  }\r\n\r\n  onClickClear = async () => {    \r\n    const result = await axiosRequest.get('clear');\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: false,\r\n      // disableLoadFileBtn: false\r\n      indexDone: false\r\n    })\r\n    console.log(result);\r\n  }\r\n\r\n  async onClickCacheClear(){\r\n    const result = await axiosRequest.get('clearCache');\r\n    console.log(result);\r\n  }\r\n\r\n  handleSliderChange(){\r\n    console.log('changed');\r\n  }\r\n\r\n  render() {\r\n    const {workers, master, scheduler, currentLog, cacheWorkers, progress} = this.state;\r\n    const {startingIndex, onIndexing, indexDone} = this.state;\r\n    const {insertCount, updateCount, deleteCount} = this.state;\r\n    const {totalSearched} =this.state.master;\r\n    // const {disalbeClearCacheBtn, disalbeClearIndexBtn} = this.state;\r\n    const disableLoadDBBtn = startingIndex || onIndexing || indexDone;\r\n    const disableLoadFileBtn = startingIndex|| onIndexing || indexDone;\r\n    const disalbeClearIndexBtn = startingIndex || onIndexing || !indexDone;\r\n    const disalbeClearCacheBtn = startingIndex || onIndexing || !indexDone;\r\n    const gap = 0.3;\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"column\" height=\"100vh\" className=\"App\">\r\n        <Header gap={gap} text={\"Status\"} insert={insertCount} update={updateCount} delete={deleteCount} totalSearched={totalSearched}></Header>\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"stretch\" height=\"80vh\">\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\" width=\"45vw\"> \r\n            <Title gap={gap} title={'master'}></Title>\r\n            <Master gap={gap} master={master}></Master>\r\n            <Log gap={gap} currentLog={currentLog}></Log>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\"  width='45vw'> \r\n            <Title gap={gap} title={'cache'}></Title>\r\n            <Cache gap={gap} caches={cacheWorkers}></Cache>            \r\n            <Title gap={gap} title={'worker'}></Title>\r\n            <Worker gap={gap} workers={workers}></Worker>\r\n          </Box>\r\n        </Box>\r\n        <PrettoSlide value={progress} onChange={this.handleSliderChange} aria-labelledby=\"continuous-slider\" />\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" alignItems=\"center\" flexGrow=\"1\" mx={gap} mb={gap} bgcolor={brown[900]}>\r\n          <Tooltip open={disableLoadDBBtn} title={onIndexing ? \"Wait indexing...\" : \"Clear Index first!\"} placement=\"right-end\">\r\n            <BrownButton disabled={disableLoadDBBtn} onClick={this.onClickLoadFromDB} variant=\"contained\" color=\"primary\"  size=\"medium\">load from DB</BrownButton>         \r\n          </Tooltip>  \r\n          <Tooltip open={disableLoadFileBtn} title={onIndexing ? \"Wait indexing...\" : \"Clear Index first!\"} placement=\"right-end\">\r\n            <BrownButton disabled={disableLoadFileBtn} onClick={this.onClickLoad} variant=\"contained\" color=\"primary\"  size=\"medium\">load from file</BrownButton> \r\n          </Tooltip> \r\n          <Tooltip open={onIndexing} title=\"Wait indexing...\" placement=\"right-end\">\r\n            <BrownButton disabled={disalbeClearIndexBtn} onClick={this.onClickClear} variant=\"contained\" color=\"primary\"  size=\"medium\">clear index</BrownButton>\r\n          </Tooltip> \r\n            <BrownButton disabled={disalbeClearCacheBtn} onClick={this.onClickCacheClear} variant=\"contained\" color=\"primary\"  size=\"medium\">clear cache</BrownButton>\r\n          </Box>\r\n      </Box>\r\n    )\r\n  }\r\n} ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}